const path = require('path');
const getMostFrequentSyllables = require('./mostFrequent')
  .getMostFrequentSyllables;

const jsonPath = path.join(
  __dirname,
  '..',
  'JSON',
  'words',
  'words_with_0_letters.json'
);

let myFound = [
  { the: 648341 },
  { of: 367229 },
  { to: 316647 },
  { and: 304375 },
  { a: 256185 },
  { in: 196169 },
  { was: 129863 },
  { that: 120394 },
  { as: 97841 },
  { I: 89015 },
  { is: 82991 },
  { had: 82674 },
  { his: 82152 },
  { he: 81903 },
  { with: 79639 },
  { for: 78564 },
  { The: 77985 },
  { it: 76034 },
  { her: 73097 },
  { on: 70633 },
  { not: 69374 },
  { she: 63506 },
  { be: 62857 },
  { at: 59501 },
  { you: 54214 },
  { but: 53792 },
  { from: 50895 },
  { have: 50343 },
  { by: 46636 },
  { were: 44320 },
  { they: 43578 },
  { or: 41495 },
  { He: 38741 },
  { are: 37434 },
  { would: 36944 },
  { an: 35529 },
  { this: 34690 },
  { one: 34076 },
  { their: 33438 },
  { could: 31498 },
  { been: 30673 },
  { She: 28332 },
  { if: 28133 },
  { my: 27910 },
  { all: 27548 },
  { what: 27251 },
  { we: 25675 },
  { more: 25276 },
  { out: 24370 },
  { into: 23860 },
  { who: 23549 },
  { It: 23524 },
  { no: 23253 },
  { than: 23233 },
  { about: 23047 },
  { which: 22538 },
  { so: 22162 },
  { like: 22018 },
  { him: 21945 },
  { up: 21340 },
  { will: 21330 },
  { did: 20678 },
  { when: 20081 },
  { them: 19688 },
  { can: 19432 },
  { do: 18510 },
  { there: 18503 },
  { only: 18291 },
  { said: 18237 },
  { '“I': 17774 },
  { other: 17487 },
  { has: 17120 },
  { its: 16928 },
  { A: 16886 },
  { In: 16697 },
  { some: 16577 },
  { just: 15701 },
  { me: 15650 },
  { back: 15435 },
  { even: 15085 },
  { over: 14545 },
  { then: 14318 },
  { any: 14228 },
  { But: 14204 },
  { your: 13981 },
  { 'said.': 13946 },
  { two: 13290 },
  { made: 13288 },
  { see: 13124 },
  { '–': 12828 },
  { know: 12758 },
  { They: 12374 },
  { those: 12293 },
  { through: 12258 },
  { much: 12224 },
  { way: 12082 },
  { time: 12053 },
  { how: 11865 },
  { down: 11824 },
  { still: 11810 }
];

myFound = myFound.map(obj => Object.keys(obj)[0]);

const wikiFound = [
  'the',
  'be',
  'to',
  'of',
  'and',
  'a',
  'in',
  'that',
  'have',
  'I',
  'it',
  'for',
  'not',
  'on',
  'with',
  'he',
  'as',
  'you',
  'do',
  'at',
  'this',
  'but',
  'his',
  'by',
  'from',
  'they',
  'we',
  'say',
  'her',
  'she',
  'or',
  'an',
  'will',
  'my',
  'one',
  'all',
  'would',
  'there',
  'their',
  'what',
  'so',
  'up',
  'out',
  'if',
  'about',
  'who',
  'get',
  'which',
  'go',
  'me',
  'when',
  'make',
  'can',
  'like',
  'time',
  'no',
  'just',
  'him',
  'know',
  'take',
  'people',
  'into',
  'year',
  'your',
  'good',
  'some',
  'could',
  'them',
  'see',
  'other',
  'than',
  'then',
  'now',
  'look',
  'only',
  'come',
  'its',
  'over',
  'think',
  'also',
  'back',
  'after',
  'use',
  'two',
  'how',
  'our',
  'work',
  'first',
  'well',
  'way',
  'even',
  'new',
  'want',
  'because',
  'any',
  'these',
  'give',
  'day',
  'most',
  'us'
];

const myMap = new Map();

[...wikiFound, ...myFound].forEach(word => {
  myMap.set(word);
});

console.log(myMap);
